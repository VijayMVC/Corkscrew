<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Corkscrew.SDK.MySQL</name>
  </assembly>
  <members>
    <member name="T:Corkscrew.SDK.providers.database.CSMySqlProvider">
      <summary>
            Provider for MySQL database engine
            </summary>
    </member>
    <member name="M:Corkscrew.SDK.providers.database.CSMySqlProvider.#ctor">
      <summary>
            NOP constructor
            </summary>
    </member>
    <member name="M:Corkscrew.SDK.providers.database.CSMySqlProvider.#ctor(System.String)">
      <summary>
            Public constructor, initializes with the connection string
            </summary>
      <param name="connectionString">Connection string to initialize with</param>
    </member>
    <member name="P:Corkscrew.SDK.providers.database.CSMySqlProvider.Connection">
      <summary>
            Provides access to the underlying connection so that the ODMs can 
            perform functions not directly supported by this provider class.
            </summary>
    </member>
    <member name="M:Corkscrew.SDK.providers.database.CSMySqlProvider.Dispose">
      <summary>
            Dispose the definition
            </summary>
    </member>
    <member name="M:Corkscrew.SDK.providers.database.CSMySqlProvider.Dispose(System.Boolean)">
      <summary>
            Dispose the definition
            </summary>
      <param name="disposing">
        <markup>
          <include item="SMCAutoDocDisposeParam">
            <parameter>Corkscrew.SDK.providers.database.CSMySqlProvider</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Corkscrew.SDK.providers.database.CSMySqlProvider.ExecuteNonQueryStatement(System.String,System.Int32)">
      <summary>
            Execute a non-query statement
            </summary>
      <param name="statement">DML statement to execute</param>
      <param name="commandTimeout">[OPTIONAL] Timeout of command. Default of 30 seconds.</param>
      <returns>DatabaseActionResult with any errors. Note that DatabaseActionResult datasets will NOT be populated</returns>
    </member>
    <member name="M:Corkscrew.SDK.providers.database.CSMySqlProvider.ExecuteSelectStatement(System.String,System.Int32)">
      <summary>
            Execute a Sql SELECT statement and return its results
            </summary>
      <param name="selectStatement">SELECT statement to run</param>
      <param name="commandTimeout">[OPTIONAL] Timeout of command. Default of 30 seconds.</param>
      <returns>DatabaseActionResult object with the data</returns>
    </member>
    <member name="M:Corkscrew.SDK.providers.database.CSMySqlProvider.ExecuteStoredProcedure(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object},System.Int32)">
      <summary>
            Execute a stored procedure and return its results
            </summary>
      <param name="procedureName">Stored procedure to run</param>
      <param name="inParameters">[OPTIONAL] Dictionary of IN parameters (keys are parameter names, values are param values)</param>
      <param name="outParameters">[OPTIONAL] Dictionary of OUT parameters. If this dictionary is NULL, then no out parameters are retrieved</param>
      <param name="commandTimeout">[OPTIONAL] Timeout of command. Default of 30 seconds.</param>
      <returns>DatabaseActionResult object with the data</returns>
    </member>
    <member name="M:Corkscrew.SDK.providers.database.CSMySqlProvider.GetAllDatabases(System.String)">
      <summary>
            Returns all the databases from the given connection string
            </summary>
      <param name="connectionString">Connection string</param>
      <returns>List of database names, empty list if not retrieved.</returns>
    </member>
    <member name="M:Corkscrew.SDK.providers.database.CSMySqlProvider.GetBinaryContent(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Int32,System.Int32,System.Int32)">
      <summary>
            Executes a stored procedure to retrieve byte[] data
            </summary>
      <param name="procedureName">Stored procedure to run</param>
      <param name="inParameters">[OPTIONAL] Dictionary of IN parameters (keys are parameter names, values are param values)</param>
      <param name="contentLengthColumnIndex">Zero-based index of the column containing the length of the content</param>
      <param name="contentColumnIndex">Zero-based index of the column containing the content</param>
      <param name="commandTimeout">[OPTIONAL] Timeout of command. Default of 30 seconds.</param>
      <returns>Byte array or NULL</returns>
    </member>
    <member name="M:Corkscrew.SDK.providers.database.CSMySqlProvider.GetSingleValue(System.String,System.Int32,System.String)">
      <summary>
            Get a single value output (instead of a statement). This is similar to the ExecuteScalar statement.
            </summary>
      <param name="query">Select query to run</param>
      <param name="commandTimeout">[OPTIONAL] Timeout of command. Default of 30 seconds.</param>
      <param name="onEmpty">[OPTIONAL] value to return if nothing was returned by SQL</param>
      <returns>The string equivalent of what was returned.</returns>
    </member>
    <member name="P:Corkscrew.SDK.providers.database.CSMySqlProvider.HasError">
      <summary>
            Returns if the provider has suffered an error
            </summary>
    </member>
    <member name="P:Corkscrew.SDK.providers.database.CSMySqlProvider.PrimaryDatabaseName">
      <summary>
            Name of the database engine's primary database. 
            </summary>
    </member>
    <member name="P:Corkscrew.SDK.providers.database.CSMySqlProvider.ProviderName">
      <summary>
            Name of the database engine's type 
            </summary>
    </member>
    <member name="P:Corkscrew.SDK.providers.database.CSMySqlProvider.QuoteEndChar">
      <summary>
            Ending character of the literal used to quote identifiers
            </summary>
    </member>
    <member name="P:Corkscrew.SDK.providers.database.CSMySqlProvider.QuoteStartChar">
      <summary>
            Starting character of the literal used to quote identifiers
            </summary>
    </member>
    <member name="M:Corkscrew.SDK.providers.database.CSMySqlProvider.TableExists(System.String)">
      <summary>
            Returns if the given table exists
            </summary>
      <param name="tableName">Name of the table to check</param>
      <returns>True if table exists</returns>
    </member>
    <member name="M:Corkscrew.SDK.providers.database.CSMySqlProvider.TryConnect(System.String)">
      <summary>
            Attempts to connect to the given connection string
            </summary>
      <param name="connectionString">Connection string to try</param>
      <returns>True if connection was successful.</returns>
    </member>
  </members>
</doc>